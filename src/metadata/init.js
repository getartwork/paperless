export default function meta($p) {

$p.wsql.alasql('USE md; CREATE TABLE IF NOT EXISTS `ireg_$log` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, `date` INT, `sequence` INT, `class` CHAR, `note` CHAR, `obj` CHAR); CREATE TABLE IF NOT EXISTS `doc_planning_event` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, posted boolean, date Date, number_doc CHAR, `phase` CHAR, `work_center` CHAR, `recipient` CHAR, `calc_order` CHAR, `note` CHAR, `ts_executors` JSON, `ts_planning` JSON); CREATE TABLE IF NOT EXISTS `cat_property_values` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `heft` FLOAT, `ПолноеНаименование` CHAR, `predefined_name` CHAR, `owner` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_work_centers` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `work_center_kind` CHAR, `КоэффициентВремениРаботы` FLOAT, `МаксимальнаяЗагрузка` FLOAT, `calendar` CHAR, `definition` CHAR, `predefined_name` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_work_center_kinds` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `predefined_name` CHAR, `parent` CHAR); CREATE TABLE IF NOT EXISTS `cat_work_shifts` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `predefined_name` CHAR, `ts_work_shift_periodes` JSON); CREATE TABLE IF NOT EXISTS `cat_planning_keys` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `work_shift` CHAR, `department` CHAR, `work_center` CHAR, `work_center_kind` CHAR, `predefined_name` CHAR); CREATE TABLE IF NOT EXISTS `cat_individuals` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `birth_date` Date, `inn` CHAR, `imns_code` CHAR, `note` CHAR, `pfr_number` CHAR, `sex` CHAR, `birth_place` CHAR, `ОсновноеИзображение` CHAR, `Фамилия` CHAR, `Имя` CHAR, `Отчество` CHAR, `ФамилияРП` CHAR, `ИмяРП` CHAR, `ОтчествоРП` CHAR, `ОснованиеРП` CHAR, `ДолжностьРП` CHAR, `Должность` CHAR, `predefined_name` CHAR, `parent` CHAR, `ts_contact_information` JSON); CREATE TABLE IF NOT EXISTS `cat_divisions` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `main_project` CHAR, `sorting` INT, `predefined_name` CHAR, `parent` CHAR, `ts_extra_fields` JSON); CREATE TABLE IF NOT EXISTS `cat_stores` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `note` CHAR, `department` CHAR, `predefined_name` CHAR, `parent` CHAR, `ts_extra_fields` JSON); CREATE TABLE IF NOT EXISTS `cat_users_acl` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `prefix` CHAR, `СуффиксБазы` CHAR, `predefined_name` CHAR, `owner` CHAR, `ts_acl_objs` JSON); CREATE TABLE IF NOT EXISTS `cat_users` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `invalid` BOOLEAN, `department` CHAR, `individual_person` CHAR, `note` CHAR, `ancillary` BOOLEAN, `user_ib_uid` CHAR, `user_fresh_uid` CHAR, `id` CHAR, `predefined_name` CHAR, `ts_extra_fields` JSON, `ts_contact_information` JSON); CREATE TABLE IF NOT EXISTS `cch_properties` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `shown` BOOLEAN, `extra_values_owner` CHAR, `available` BOOLEAN, `caption` CHAR, `mandatory` BOOLEAN, `note` CHAR, `destination` CHAR, `tooltip` CHAR, `is_extra_property` BOOLEAN, `list` BOOLEAN, `predefined_name` CHAR, `type` JSON, `ts_extra_fields_dependencies` JSON); CREATE TABLE IF NOT EXISTS `cch_predefined_elmnts` (ref CHAR PRIMARY KEY NOT NULL, `_deleted` BOOLEAN, id CHAR, name CHAR, is_folder BOOLEAN, `value` CHAR, `definition` CHAR, `synonym` CHAR, `list` INT, `zone` INT, `predefined_name` CHAR, `parent` CHAR, `type` CHAR, `ts_elmnts` JSON); CREATE TABLE IF NOT EXISTS `enm_individual_legal` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_planning_phases` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_nom_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_contact_information_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_vat_rates` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_buyers_order_states` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_gender` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_positions` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_elm_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_cnn_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_sz_line_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_open_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_cutting_optimization_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_lay_split_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_inserts_glass_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_inserts_types` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_cnn_sides` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_specification_installation_methods` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_angle_calculating_ways` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_count_calculating_ways` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_simple_complex_all` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_orientations` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_plan_limit` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_open_directions` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_text_aligns` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_contraction_options` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_offset_options` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_transfer_operations_options` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_НазначенияЦветовыхГрупп` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_order_categories` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_caching_type` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_obj_delivery_states` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_contract_kinds` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_mutual_contract_settlements` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_impost_mount_options` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_inset_attrs_options` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); CREATE TABLE IF NOT EXISTS `enm_accumulation_record_type` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR); ', []);

$p.md.init({"enm":{"accumulation_record_type":[{"order":0,"name":"debit","synonym":"Приход"},{"order":1,"name":"credit","synonym":"Расход"}],"inset_attrs_options":[{"order":0,"name":"НеПоперечина","synonym":"Не поперечина"},{"order":1,"name":"ОбаНаправления","synonym":"Оба направления"},{"order":2,"name":"ОтключитьВтороеНаправление","synonym":"Отключить второе направление"},{"order":3,"name":"ОтключитьШагиВторогоНаправления","synonym":"Отключить шаги второго направления"},{"order":4,"name":"ОтключитьПервоеНаправление","synonym":"Отключить первое направление"},{"order":5,"name":"ОтключитьШагиПервогоНаправления","synonym":"Отключить шаги первого направления"}],"impost_mount_options":[{"order":0,"name":"НетКрепленийИмпостовИРам","synonym":"Нет креплений импостов и рам"},{"order":1,"name":"МогутКрепитьсяИмпосты","synonym":"Могут крепиться импосты"},{"order":2,"name":"ДолжныБытьКрепленияИмпостов","synonym":"Должны быть крепления импостов"}],"mutual_contract_settlements":[{"order":0,"name":"ПоДоговоруВЦелом","synonym":"По договору в целом"},{"order":1,"name":"ПоЗаказам","synonym":"По заказам"},{"order":2,"name":"ПоСчетам","synonym":"По счетам"}],"contract_kinds":[{"order":0,"name":"СПоставщиком","synonym":"С поставщиком"},{"order":1,"name":"СПокупателем","synonym":"С покупателем"},{"order":2,"name":"СКомитентом","synonym":"С комитентом"},{"order":3,"name":"СКомиссионером","synonym":"С комиссионером"},{"order":4,"name":"Прочее","synonym":"Прочее"}],"obj_delivery_states":[{"order":0,"name":"Черновик","synonym":"Черновик"},{"order":1,"name":"Отправлен","synonym":"Отправлен"},{"order":2,"name":"Подтвержден","synonym":"Подтвержден"},{"order":3,"name":"Отклонен","synonym":"Отклонен"},{"order":4,"name":"Отозван","synonym":"Отозван"},{"order":5,"name":"Архив","synonym":"Перенесён в архив"},{"order":6,"name":"Шаблон","synonym":"Шаблон"}],"caching_type":[{"order":0,"name":"ram","synonym":"ram"},{"order":1,"name":"doc","synonym":"doc"},{"order":2,"name":"doc_remote","synonym":"doc_remote"},{"order":3,"name":"remote","synonym":"remote"},{"order":4,"name":"user","synonym":"user"},{"order":5,"name":"meta","synonym":"meta"},{"order":6,"name":"e1cib","synonym":"e1cib"},{"order":7,"name":"pgsql","synonym":"pgsql"}],"order_categories":[{"order":0,"name":"РасчетЗаказ","synonym":"Расчет заказ"},{"order":1,"name":"Сервис","synonym":"Сервис"},{"order":2,"name":"Рекламация","synonym":"Рекламация"}],"НазначенияЦветовыхГрупп":[{"order":0,"name":"ДляЦенообразования","synonym":"Для ценообразования"},{"order":1,"name":"ДляХарактеристик","synonym":"Для характеристик"},{"order":2,"name":"ДляГруппировкиВПараметрах","synonym":"Для группировки в параметрах"},{"order":3,"name":"ДляОграниченияДоступности","synonym":"Для ограничения доступности"}],"transfer_operations_options":[{"order":0,"name":"НетПереноса","synonym":"Нет переноса"},{"order":1,"name":"НаПримыкающий","synonym":"На примыкающий"}],"offset_options":[{"order":0,"name":"ОтНачалаСтороны","synonym":"От начала стороны"},{"order":1,"name":"ОтКонцаСтороны","synonym":"От конца стороны"},{"order":2,"name":"ОтРучки","synonym":"От ручки"},{"order":3,"name":"РазмерПоФальцу","synonym":"Размер по фальцу"},{"order":4,"name":"Формула","synonym":"Формула"}],"contraction_options":[{"order":0,"name":"ОтДлиныСтороны","synonym":"От длины стороны"},{"order":1,"name":"ОтВысотыРучки","synonym":"От высоты ручки"},{"order":2,"name":"ОтДлиныСтороныМинусВысотыРучки","synonym":"От длины стороны минус высота ручки"},{"order":3,"name":"ФиксированнаяДлина","synonym":"Фиксированная длина"}],"text_aligns":[{"order":0,"name":"left","synonym":"Лево"},{"order":1,"name":"right","synonym":"Право"},{"order":2,"name":"center","synonym":"Центр"}],"open_directions":[{"order":0,"name":"Левое","synonym":"Левое"},{"order":1,"name":"Правое","synonym":"Правое"},{"order":2,"name":"Откидное","synonym":"Откидное"}],"plan_limit":[{"order":0,"name":"ПоУО","synonym":"По условным изделиям"},{"order":1,"name":"ПоПлощади","synonym":"По площади изделий"},{"order":2,"name":"ПоКоличеству","synonym":"По количеству изделий или элементов"},{"order":3,"name":"ПоКоличествуОпераций","synonym":"По количеству технологических операций"},{"order":4,"name":"НеОграничивать","synonym":"Не ограничивать"}],"orientations":[{"order":0,"name":"Горизонтальная","synonym":"Горизонтальная"},{"order":1,"name":"Вертикальная","synonym":"Вертикальная"},{"order":2,"name":"Наклонная","synonym":"Наклонная"}],"simple_complex_all":[{"order":0,"name":"Простые","synonym":"Простые"},{"order":1,"name":"Сложные","synonym":"Сложные"},{"order":2,"name":"Все","synonym":"Все"}],"count_calculating_ways":[{"order":0,"name":"ПоПериметру","synonym":"По периметру"},{"order":1,"name":"ПоПлощади","synonym":"По площади"},{"order":2,"name":"ДляЭлемента","synonym":"Для элемента"},{"order":3,"name":"ПоШагам","synonym":"По шагам"},{"order":4,"name":"ПоФормуле","synonym":"По формуле"}],"angle_calculating_ways":[{"order":0,"name":"Основной","synonym":"Основной"},{"order":1,"name":"СварнойШов","synonym":"Сварной шов"},{"order":2,"name":"СоединениеПополам","synonym":"Соед./2"},{"order":3,"name":"Соединение","synonym":"Соединение"},{"order":4,"name":"_90","synonym":"90"},{"order":5,"name":"НеСчитать","synonym":"Не считать"}],"specification_installation_methods":[{"order":0,"name":"Всегда","synonym":"Всегда"},{"order":1,"name":"САртикулом1","synonym":"с Арт1"},{"order":2,"name":"САртикулом2","synonym":"с Арт2"}],"cnn_sides":[{"order":0,"name":"Изнутри","synonym":"Изнутри"},{"order":1,"name":"Снаружи","synonym":"Снаружи"},{"order":2,"name":"Любая","synonym":"Любая"}],"inserts_types":[{"order":0,"name":"Профиль","synonym":"Профиль"},{"order":1,"name":"Заполнение","synonym":"Заполнение"},{"order":2,"name":"Стеклопакет","synonym":"Стеклопакет"},{"order":3,"name":"ТиповойСтеклопакет","synonym":"Типовой стеклопакет"},{"order":4,"name":"МоскитнаяСетка","synonym":"Москитная сетка"},{"order":5,"name":"Раскладка","synonym":"Раскладка"},{"order":6,"name":"Набор","synonym":"Набор"},{"order":7,"name":"Аксессуар","synonym":"Аксессуар"},{"order":8,"name":"Монтаж","synonym":"Монтаж"},{"order":9,"name":"Контур","synonym":"Контур"},{"order":10,"name":"Изделие","synonym":"Изделие"}],"inserts_glass_types":[{"order":0,"name":"Стекло","synonym":"Стекло"},{"order":1,"name":"Рамка","synonym":"Рамка"},{"order":2,"name":"Газозаполнение","synonym":"Газозаполнение"}],"lay_split_types":[{"order":0,"name":"ДелениеГоризонтальных","synonym":"Деление горизонтальных"},{"order":1,"name":"ДелениеВертикальных","synonym":"Деление вертикальных"},{"order":2,"name":"КрестВСтык","synonym":"Крест в стык"},{"order":3,"name":"КрестПересечение","synonym":"Крест пересечение"}],"cutting_optimization_types":[{"order":0,"name":"Нет","synonym":"Нет"},{"order":1,"name":"РасчетНарезки","synonym":"Расчет нарезки"},{"order":2,"name":"НельзяВращатьПереворачивать","synonym":"Нельзя вращать переворачивать"},{"order":3,"name":"ТолькоНомераЯчеек","synonym":"Только номера ячеек"}],"open_types":[{"order":0,"name":"Глухое","synonym":"Глухое"},{"order":1,"name":"Поворотное","synonym":"Поворотное"},{"order":2,"name":"Откидное","synonym":"Откидное"},{"order":3,"name":"ПоворотноОткидное","synonym":"Поворотно-откидное"},{"order":4,"name":"Раздвижное","synonym":"Раздвижное"},{"order":5,"name":"Неподвижное","synonym":"Неподвижное"}],"sz_line_types":[{"order":0,"name":"Обычные","synonym":"Обычные"},{"order":1,"name":"ТолькоГабаритные","synonym":"Только габаритные"},{"order":2,"name":"РазмерыПоСтворкам","synonym":"Размеры по створкам"},{"order":3,"name":"БезРазмеров","synonym":"Без размеров"},{"order":4,"name":"Сокращенные","synonym":"Сокращенные"}],"cnn_types":[{"order":0,"name":"УгловоеДиагональное","synonym":"Угловое диагональное"},{"order":1,"name":"УгловоеКВертикальной","synonym":"Угловое к вертикальной"},{"order":2,"name":"УгловоеКГоризонтальной","synonym":"Угловое к горизонтальной"},{"order":3,"name":"ТОбразное","synonym":"Т-образное"},{"order":4,"name":"Наложение","synonym":"Наложение"},{"order":5,"name":"НезамкнутыйКонтур","synonym":"Незамкнутый контур"},{"order":6,"name":"КрестВСтык","synonym":"Крест в стык"},{"order":7,"name":"КрестПересечение","synonym":"Крест пересечение"}],"elm_types":[{"order":0,"name":"Рама","synonym":"Рама"},{"order":1,"name":"Створка","synonym":"Створка"},{"order":2,"name":"Импост","synonym":"Импост"},{"order":3,"name":"Штульп","synonym":"Штульп"},{"order":4,"name":"Стекло","synonym":"Стекло - стеклопакет"},{"order":5,"name":"Заполнение","synonym":"Заполнение - сэндвич"},{"order":6,"name":"Раскладка","synonym":"Раскладка - фальшпереплет"},{"order":7,"name":"Текст","synonym":"Текст"},{"order":8,"name":"Линия","synonym":"Линия"},{"order":9,"name":"Размер","synonym":"Размер"},{"order":10,"name":"Добор","synonym":"Доборный проф."},{"order":11,"name":"Соединитель","synonym":"Соединит. профиль"},{"order":12,"name":"Москитка","synonym":"Москитн. сетка"},{"order":13,"name":"Фурнитура","synonym":"Фурнитура"},{"order":14,"name":"Макрос","synonym":"Макрос обр центра"},{"order":15,"name":"Подоконник","synonym":"Подоконник"},{"order":16,"name":"Водоотлив","synonym":"Водоотлив"},{"order":17,"name":"ОшибкаКритическая","synonym":"Ошибка критическая"},{"order":18,"name":"ОшибкаИнфо","synonym":"Ошибка инфо"},{"order":19,"name":"Визуализация","synonym":"Визуализация"},{"order":20,"name":"Прочее","synonym":"Прочее"},{"order":21,"name":"Продукция","synonym":"Продукция"},{"order":22,"name":"Доставка","synonym":"Доставка"},{"order":23,"name":"РаботыЦеха","synonym":"Работы цеха"},{"order":24,"name":"РаботыМонтажа","synonym":"Работы монтажа"},{"order":25,"name":"Монтаж","synonym":"Монтаж"},{"order":26,"name":"Уплотнение","synonym":"Уплотнение"},{"order":27,"name":"Арматура","synonym":"Армирование"},{"order":28,"name":"Штапик","synonym":"Штапик"},{"order":29,"name":"Порог","synonym":"Порог"},{"order":30,"name":"Подставочник","synonym":"Подставочн. профиль"}],"positions":[{"order":0,"name":"Любое","synonym":"Любое"},{"order":1,"name":"Верх","synonym":"Верх"},{"order":2,"name":"Низ","synonym":"Низ"},{"order":3,"name":"Лев","synonym":"Лев"},{"order":4,"name":"Прав","synonym":"Прав"},{"order":5,"name":"ЦентрВертикаль","synonym":"Центр вертикаль"},{"order":6,"name":"ЦентрГоризонталь","synonym":"Центр горизонталь"},{"order":7,"name":"Центр","synonym":"Центр"},{"order":8,"name":"ЛевВерх","synonym":"Лев верх"},{"order":9,"name":"ЛевНиз","synonym":"Лев низ"},{"order":10,"name":"ПравВерх","synonym":"Прав верх"},{"order":11,"name":"ПравНиз","synonym":"Прав низ"}],"gender":[{"order":0,"name":"Мужской","synonym":"Мужской"},{"order":1,"name":"Женский","synonym":"Женский"}],"buyers_order_states":[{"order":0,"name":"ОжидаетсяСогласование","synonym":"Ожидается согласование"},{"order":1,"name":"ОжидаетсяАвансДоОбеспечения","synonym":"Ожидается аванс (до обеспечения)"},{"order":2,"name":"ГотовКОбеспечению","synonym":"Готов к обеспечению"},{"order":3,"name":"ОжидаетсяПредоплатаДоОтгрузки","synonym":"Ожидается предоплата (до отгрузки)"},{"order":4,"name":"ОжидаетсяОбеспечение","synonym":"Ожидается обеспечение"},{"order":5,"name":"ГотовКОтгрузке","synonym":"Готов к отгрузке"},{"order":6,"name":"ВПроцессеОтгрузки","synonym":"В процессе отгрузки"},{"order":7,"name":"ОжидаетсяОплатаПослеОтгрузки","synonym":"Ожидается оплата (после отгрузки)"},{"order":8,"name":"ГотовКЗакрытию","synonym":"Готов к закрытию"},{"order":9,"name":"Закрыт","synonym":"Закрыт"}],"vat_rates":[{"order":0,"name":"НДС18","synonym":"18%"},{"order":1,"name":"НДС18_118","synonym":"18% / 118%"},{"order":2,"name":"НДС10","synonym":"10%"},{"order":3,"name":"НДС10_110","synonym":"10% / 110%"},{"order":4,"name":"НДС0","synonym":"0%"},{"order":5,"name":"БезНДС","synonym":"Без НДС"},{"order":6,"name":"НДС20","synonym":"20%"},{"order":7,"name":"НДС20_120","synonym":"20% / 120%"}],"contact_information_types":[{"order":0,"name":"Адрес","synonym":"Адрес"},{"order":1,"name":"Телефон","synonym":"Телефон"},{"order":2,"name":"АдресЭлектроннойПочты","synonym":"Адрес электронной почты"},{"order":3,"name":"ВебСтраница","synonym":"Веб страница"},{"order":4,"name":"Факс","synonym":"Факс"},{"order":5,"name":"Другое","synonym":"Другое"},{"order":6,"name":"Skype","synonym":"Skype"}],"nom_types":[{"order":0,"name":"Товар","synonym":"Товар, материал"},{"order":1,"name":"Услуга","synonym":"Услуга"},{"order":2,"name":"Работа","synonym":"Работа, техоперация"}],"planning_phases":[{"order":0,"name":"План","synonym":"План"},{"order":1,"name":"Запуск","synonym":"Запуск"},{"order":2,"name":"Готовность","synonym":"Готовность"}],"individual_legal":[{"order":0,"name":"ЮрЛицо","synonym":"Юрлицо"},{"order":1,"name":"ФизЛицо","synonym":"Физлицо"}]},"cat":{"users":{"name":"Пользователи","splitted":true,"synonym":"Пользователи","illustration":"","obj_presentation":"Пользователь","list_presentation":"","input_by_string":["name"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"invalid":{"synonym":"Недействителен","multiline_mode":false,"tooltip":"Пользователь больше не работает в программе, но сведения о нем сохранены.\nНедействительные пользователи скрываются из всех списков\nпри выборе или подборе в документах и других местах программы.","type":{"types":["boolean"]}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"Подразделение, в котором работает пользователь","choice_groups_elm":"elm","type":{"types":["cat.divisions"],"is_ref":true}},"individual_person":{"synonym":"Физическое лицо","multiline_mode":false,"tooltip":"Физическое лицо, с которым связан пользователь","choice_groups_elm":"elm","type":{"types":["cat.individuals"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":true,"tooltip":"Произвольная строка","type":{"types":["string"],"str_len":0}},"ancillary":{"synonym":"Служебный","multiline_mode":false,"tooltip":"Неразделенный или разделенный служебный пользователь, права к которому устанавливаются непосредственно и программно.","type":{"types":["boolean"]}},"user_ib_uid":{"synonym":"Идентификатор пользователя ИБ","multiline_mode":false,"tooltip":"Уникальный идентификатор пользователя информационной базы, с которым сопоставлен этот элемент справочника.","choice_groups_elm":"elm","type":{"types":["string"],"str_len":36,"str_fix":true}},"user_fresh_uid":{"synonym":"Идентификатор пользователя сервиса","multiline_mode":false,"tooltip":"Уникальный идентификатор пользователя сервиса, с которым сопоставлен этот элемент справочника.","choice_groups_elm":"elm","type":{"types":["string"],"str_len":36,"str_fix":true}},"id":{"synonym":"Логин","multiline_mode":true,"tooltip":"Произвольная строка","type":{"types":["string"],"str_len":50}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"Дополнительные реквизиты объекта","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_shifts","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0}}}},"contact_information":{"name":"КонтактнаяИнформация","synonym":"Контактная информация","tooltip":"Хранение контактной информации (адреса, веб-страницы, номера телефонов и др.)","fields":{"type":{"synonym":"Тип","multiline_mode":false,"tooltip":"Тип контактной информации (телефон, адрес и т.п.)","choice_groups_elm":"elm","type":{"types":["enm.contact_information_types"],"is_ref":true}},"kind":{"synonym":"Вид","multiline_mode":false,"tooltip":"Вид контактной информации","choice_params":[{"name":"parent","path":{"ref":"8cbaa30d-faab-45ad-880e-84f8b421f448","presentation":"Справочник \"Пользователи\"","type":"cat.contact_information_kinds"}}],"choice_groups_elm":"elm","type":{"types":["cat.contact_information_kinds"],"is_ref":true}},"presentation":{"synonym":"Представление","multiline_mode":false,"tooltip":"Представление контактной информации для отображения в формах","type":{"types":["string"],"str_len":500}},"values_fields":{"synonym":"Значения полей","multiline_mode":false,"tooltip":"Служебное поле, для хранения контактной информации","type":{"types":["string"],"str_len":0}},"country":{"synonym":"Страна","multiline_mode":false,"tooltip":"Страна (заполняется для адреса)","type":{"types":["string"],"str_len":100}},"region":{"synonym":"Регион","multiline_mode":false,"tooltip":"Регион (заполняется для адреса)","type":{"types":["string"],"str_len":50}},"city":{"synonym":"Город","multiline_mode":false,"tooltip":"Город (заполняется для адреса)","type":{"types":["string"],"str_len":50}},"email_address":{"synonym":"Адрес ЭП","multiline_mode":false,"tooltip":"Адрес электронной почты","type":{"types":["string"],"str_len":100}},"server_domain_name":{"synonym":"Доменное имя сервера","multiline_mode":false,"tooltip":"Доменное имя сервера электронной почты или веб-страницы","type":{"types":["string"],"str_len":100}},"phone_number":{"synonym":"Номер телефона","multiline_mode":false,"tooltip":"Полный номер телефона","type":{"types":["string"],"str_len":20}},"phone_without_codes":{"synonym":"Номер телефона без кодов","multiline_mode":false,"tooltip":"Номер телефона без кодов и добавочного номера","type":{"types":["string"],"str_len":20}},"ВидДляСписка":{"synonym":"Вид для списка","multiline_mode":false,"tooltip":"Вид контактной информации для списка","choice_groups_elm":"elm","type":{"types":["cat.contact_information_kinds"],"is_ref":true}}}}},"cachable":"ram","form":{"obj":{"head":{" ":["id","name","individual_person"],"Дополнительно":["ancillary","invalid",{"id":"user_ib_uid","path":"o.user_ib_uid","synonym":"Идентификатор пользователя ИБ","type":"ro"},{"id":"user_fresh_uid","path":"o.user_fresh_uid","synonym":"Идентификатор пользователя сервиса","type":"ro"},"note"]},"tabular_sections":{"contact_information":{"fields":["kind","presentation"],"headers":"Вид,Представление","widths":"200,*","min_widths":"100,200","aligns":"","sortings":"na,na","types":"ref,txt"}},"tabular_sections_order":["contact_information"]}}},"users_acl":{"name":"ИнтеграцияПраваПользователей","splitted":true,"synonym":"Права внешних пользователей","illustration":"","obj_presentation":"Права внешних пользователей","list_presentation":"Права внешних пользователей","input_by_string":[],"hierarchical":false,"has_owners":true,"group_hierarchy":true,"main_presentation_name":false,"code_length":0,"fields":{"prefix":{"synonym":"Префикс нумерации документов","multiline_mode":false,"tooltip":"Префикс номеров документов текущего пользователя","mandatory":true,"type":{"types":["string"],"str_len":2}},"СуффиксБазы":{"synonym":"Суффикс CouchDB","multiline_mode":false,"tooltip":"Суффикс нидивидуальной базы пользователя","type":{"types":["string"],"str_len":20}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"owner":{"synonym":"Пользователь","multiline_mode":false,"tooltip":"","mandatory":true,"type":{"types":["cat.users"],"is_ref":true}}},"tabular_sections":{"acl_objs":{"name":"ОбъектыДоступа","synonym":"Объекты доступа","tooltip":"","fields":{"acl_obj":{"synonym":"Объект доступа","multiline_mode":false,"tooltip":"","type":{"types":["cat.individuals","cat.users","cat.divisions","cat.partners","cat.organizations","cat.cashboxes","cat.meta_ids","cat.stores"],"is_ref":true}},"type":{"synonym":"Тип","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"by_default":{"synonym":"По умолчанию","multiline_mode":false,"tooltip":"","type":{"types":["boolean"]}}}}},"cachable":"ram","hide":true},"stores":{"name":"Склады","splitted":true,"synonym":"Склады (места хранения)","illustration":"Сведения о местах хранения товаров (складах), их структуре и физических лицах, назначенных материально ответственными (МОЛ) за тот или иной склад","obj_presentation":"Склад","list_presentation":"Склады","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.divisions"],"is_ref":true}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Группа","multiline_mode":false,"tooltip":"","type":{"types":["cat.stores"],"is_ref":true}}},"tabular_sections":{"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"Набор реквизитов, состав которого определяется компанией.","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","choice_type":{"path":["extra_fields","property"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_shifts","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0}}}}},"cachable":"ram","grouping":"array"},"divisions":{"name":"Подразделения","splitted":true,"synonym":"Подразделения","illustration":"Перечень подразделений предприятия","obj_presentation":"Подразделение","list_presentation":"Подразделения","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":false,"main_presentation_name":true,"code_length":9,"fields":{"main_project":{"synonym":"Основной проект","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.projects"],"is_ref":true}},"sorting":{"synonym":"Порядок","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Входит в подразделение","multiline_mode":false,"tooltip":"","type":{"types":["cat.divisions"],"is_ref":true}}},"tabular_sections":{"extra_fields":{"name":"ДополнительныеРеквизиты","synonym":"Дополнительные реквизиты","tooltip":"Набор реквизитов, состав которого определяется компанией.","fields":{"property":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение дополнительного реквизита","choice_links":[{"name":["selection","owner"],"path":["extra_fields","property"]}],"choice_groups_elm":"elm","choice_type":{"path":["extra_fields","property"],"elm":0},"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_shifts","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}},"txt_row":{"synonym":"Текстовая строка","multiline_mode":false,"tooltip":"Полный текст строкового дополнительного реквизита","type":{"types":["string"],"str_len":0}}}}},"cachable":"ram","grouping":"array"},"individuals":{"name":"ФизическиеЛица","splitted":true,"synonym":"Физические лица","illustration":"","obj_presentation":"","list_presentation":"","input_by_string":["name","id"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":10,"fields":{"birth_date":{"synonym":"Дата рождения","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date"}},"inn":{"synonym":"ИНН","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":12}},"imns_code":{"synonym":"Код ИФНС","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":4}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}},"pfr_number":{"synonym":"Страховой номер ПФР","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":14}},"sex":{"synonym":"Пол","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.gender"],"is_ref":true}},"birth_place":{"synonym":"Место рождения","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":240}},"ОсновноеИзображение":{"synonym":"Основное изображение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.Файлы"],"is_ref":true}},"Фамилия":{"synonym":"Фамилия","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"Имя":{"synonym":"Имя","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"Отчество":{"synonym":"Отчество","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"ФамилияРП":{"synonym":"Фамилия (родительный падеж)","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"ИмяРП":{"synonym":"Имя (родительный падеж)","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"ОтчествоРП":{"synonym":"Отчество (родительный падеж)","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"ОснованиеРП":{"synonym":"Основание (родительный падеж)","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"ДолжностьРП":{"synonym":"Должность (родительный падеж)","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"Должность":{"synonym":"Должность","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":50}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["cat.individuals"],"is_ref":true}}},"tabular_sections":{"contact_information":{"name":"КонтактнаяИнформация","synonym":"Контактная информация","tooltip":"Хранение контактной информации (адреса, веб-страницы, номера телефонов и др.)","fields":{"type":{"synonym":"Тип","multiline_mode":false,"tooltip":"Тип контактной информации (телефон, адрес и т.п.)","choice_groups_elm":"elm","type":{"types":["enm.contact_information_types"],"is_ref":true}},"kind":{"synonym":"Вид","multiline_mode":false,"tooltip":"Вид контактной информации","choice_params":[{"name":"parent","path":{"ref":"822f19bc-09ab-4913-b283-b5461382a75d","presentation":"Справочник \"Физические лица\"","type":"cat.contact_information_kinds"}}],"choice_groups_elm":"elm","type":{"types":["cat.contact_information_kinds"],"is_ref":true}},"presentation":{"synonym":"Представление","multiline_mode":false,"tooltip":"Представление контактной информации для отображения в формах","type":{"types":["string"],"str_len":500}},"values_fields":{"synonym":"Значения полей","multiline_mode":false,"tooltip":"Служебное поле, для хранения контактной информации","type":{"types":["string"],"str_len":0}},"country":{"synonym":"Страна","multiline_mode":false,"tooltip":"Страна (заполняется для адреса)","type":{"types":["string"],"str_len":100}},"region":{"synonym":"Регион","multiline_mode":false,"tooltip":"Регион (заполняется для адреса)","type":{"types":["string"],"str_len":50}},"city":{"synonym":"Город","multiline_mode":false,"tooltip":"Город (заполняется для адреса)","type":{"types":["string"],"str_len":50}},"email_address":{"synonym":"Адрес ЭП","multiline_mode":false,"tooltip":"Адрес электронной почты","type":{"types":["string"],"str_len":100}},"server_domain_name":{"synonym":"Доменное имя сервера","multiline_mode":false,"tooltip":"Доменное имя сервера электронной почты или веб-страницы","type":{"types":["string"],"str_len":100}},"phone_number":{"synonym":"Номер телефона","multiline_mode":false,"tooltip":"Полный номер телефона","type":{"types":["string"],"str_len":20}},"phone_without_codes":{"synonym":"Номер телефона без кодов","multiline_mode":false,"tooltip":"Номер телефона без кодов и добавочного номера","type":{"types":["string"],"str_len":20}},"ВидДляСписка":{"synonym":"Вид для списка","multiline_mode":false,"tooltip":"Вид контактной информации для списка","choice_groups_elm":"elm","type":{"types":["cat.contact_information_kinds"],"is_ref":true}}}}},"cachable":"ram","hide":true,"form":{"obj":{"head":{" ":[{"id":"id","path":"o.id","synonym":"Код","type":"ro"},"name","sex","birth_date",{"id":"parent","path":"o.parent","synonym":"Группа","type":"ref"}],"Коды":["inn","imns_code","pfr_number"],"Для печатных форм":["Фамилия","Имя","Отчество","ФамилияРП","ИмяРП","ОтчествоРП","Должность","ДолжностьРП","ОснованиеРП"]},"tabular_sections":{"contact_information":{"fields":["kind","presentation"],"headers":"Вид,Представление","widths":"200,*","min_widths":"100,200","aligns":"","sortings":"na,na","types":"ref,txt"}},"tabular_sections_order":["contact_information"]}}},"planning_keys":{"name":"КлючиПланирования","splitted":true,"synonym":"Ключи планирования","illustration":"Смена + Подразделение + Участок","obj_presentation":"Ключ планирования","list_presentation":"Ключи планирования","input_by_string":["name"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"work_shift":{"synonym":"Смена","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.work_shifts"],"is_ref":true}},"department":{"synonym":"Подразделение","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.divisions"],"is_ref":true}},"work_center":{"synonym":"Рабочий центр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.work_centers"],"is_ref":true}},"work_center_kind":{"synonym":"Вид рабочего центра","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.work_center_kinds"],"is_ref":true}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{},"cachable":"doc"},"work_shifts":{"name":"Смены","splitted":true,"synonym":"Смены","illustration":"Перечень рабочих смен предприятия","obj_presentation":"Смена","list_presentation":"Смены","input_by_string":["name","id"],"hierarchical":false,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":9,"fields":{"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}}},"tabular_sections":{"work_shift_periodes":{"name":"ПериодыСмены","synonym":"Периоды смены","tooltip":"","fields":{"begin_time":{"synonym":"Время начала","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"time"}},"end_time":{"synonym":"Время окончания","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"time"}}}}},"cachable":"ram","grouping":"array"},"work_center_kinds":{"name":"ВидыРабочихЦентров","splitted":true,"synonym":"Виды рабочих центров","illustration":"","obj_presentation":"Вид рабочего центра","list_presentation":"","input_by_string":["name"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Группа видов рабочих центров","multiline_mode":false,"tooltip":"Группа, в которую входит данный вид рабочего центра","type":{"types":["cat.work_center_kinds"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram","grouping":"array"},"work_centers":{"name":"РабочиеЦентры","splitted":true,"synonym":"Рабочие центры","illustration":"","obj_presentation":"Рабочий центр","list_presentation":"","input_by_string":["name"],"hierarchical":true,"has_owners":false,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"work_center_kind":{"synonym":"Вид рабочего центра","multiline_mode":false,"tooltip":"Вид, к которому относится данный рабочий центр для планирования","choice_groups_elm":"elm","mandatory":true,"type":{"types":["cat.work_center_kinds"],"is_ref":true}},"КоэффициентВремениРаботы":{"synonym":"Коэффициент времени работы","multiline_mode":false,"tooltip":"Определяет коэффициент изменения нормативного времени работы","mandatory":true,"type":{"types":["number"],"digits":5,"fraction_figits":2}},"МаксимальнаяЗагрузка":{"synonym":"Максимальная загрузка","multiline_mode":false,"tooltip":"Максимальная загрузка рабочего центра","mandatory":true,"type":{"types":["number"],"digits":15,"fraction_figits":3}},"calendar":{"synonym":"График работы","multiline_mode":false,"tooltip":"График работы рабочего центра.","choice_groups_elm":"elm","type":{"types":["cat.calendars"],"is_ref":true}},"definition":{"synonym":"Описание","multiline_mode":false,"tooltip":"Произвольный комментарий","type":{"types":["string"],"str_len":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"Входит в группу","multiline_mode":false,"tooltip":"Группа, в которую входит рабочий центр","type":{"types":["cat.work_centers"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram","grouping":"array"},"property_values":{"name":"ЗначенияСвойствОбъектов","splitted":true,"synonym":"Дополнительные значения","illustration":"","obj_presentation":"Дополнительное значение","list_presentation":"","input_by_string":["name"],"hierarchical":true,"has_owners":true,"group_hierarchy":true,"main_presentation_name":true,"code_length":0,"fields":{"heft":{"synonym":"Весовой коэффициент","multiline_mode":false,"tooltip":"Относительный вес дополнительного значения (значимость).","type":{"types":["number"],"digits":10,"fraction_figits":2}},"ПолноеНаименование":{"synonym":"Полное наименование","multiline_mode":true,"tooltip":"Подробное описание значения дополнительного реквизита","type":{"types":["string"],"str_len":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"owner":{"synonym":"Свойство","multiline_mode":false,"tooltip":"Дополнительный реквизит или сведение.","mandatory":true,"type":{"types":["cch.properties"],"is_ref":true}},"parent":{"synonym":"Входит в группу","multiline_mode":false,"tooltip":"Группа дополнительных значений свойства.","choice_links":[{"name":["selection","owner"],"path":["owner"]}],"type":{"types":["cat.property_values"],"is_ref":true}}},"tabular_sections":{},"cachable":"ram","grouping":"array"}},"doc":{"planning_event":{"name":"СобытиеПланирования","splitted":true,"synonym":"Событие планирования","illustration":"","obj_presentation":"Событие планирования","list_presentation":"События планирования","input_by_string":["number_doc"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":false,"code_length":11,"fields":{"phase":{"synonym":"Фаза","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["enm.planning_phases"],"is_ref":true}},"work_center":{"synonym":"Рабочий центр","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.planning_keys"],"is_ref":true}},"recipient":{"synonym":"Получатель","multiline_mode":false,"tooltip":"СГП или следующий передел","choice_groups_elm":"elm","type":{"types":["cat.planning_keys"],"is_ref":true}},"calc_order":{"synonym":"Расчет","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["doc.calc_order"],"is_ref":true}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":0}}},"tabular_sections":{"executors":{"name":"Исполнители","synonym":"Исполнители","tooltip":"","fields":{"executor":{"synonym":"Исполнитель","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.individuals","cat.partners"],"is_ref":true}}}},"planning":{"name":"Планирование","synonym":"Планирование","tooltip":"","fields":{"obj":{"synonym":"Объект","multiline_mode":false,"tooltip":"","choice_groups_elm":"elm","type":{"types":["cat.characteristics"],"is_ref":true}},"specimen":{"synonym":"Экземпляр","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"performance":{"synonym":"Мощность","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":8,"fraction_figits":1}},"event_time":{"synonym":"Время события","multiline_mode":false,"tooltip":"","type":{"types":["date"],"date_part":"date_time"}}}}},"cachable":"doc"}},"ireg":{"$log":{"name":"$log","note":"","synonym":"Журнал событий","dimensions":{"date":{"synonym":"Дата","multiline_mode":false,"tooltip":"Время события","type":{"types":["number"],"digits":15,"fraction_figits":0}},"sequence":{"synonym":"Порядок","multiline_mode":false,"tooltip":"Порядок следования","type":{"types":["number"],"digits":6,"fraction_figits":0}}},"resources":{"class":{"synonym":"Класс","multiline_mode":false,"tooltip":"Класс события","type":{"types":["string"],"str_len":100}},"note":{"synonym":"Комментарий","multiline_mode":true,"tooltip":"Текст события","type":{"types":["string"],"str_len":0}},"obj":{"synonym":"Объект","multiline_mode":true,"tooltip":"Объект, к которому относится событие","type":{"types":["string"],"str_len":0}}}}},"areg":{},"dp":{},"rep":{},"cch":{"predefined_elmnts":{"name":"ПредопределенныеЭлементы","splitted":true,"synonym":"Константы и списки","illustration":"Хранит значения настроек и параметров подсистем","obj_presentation":"Значение настроек","list_presentation":"","input_by_string":[],"hierarchical":true,"has_owners":false,"group_hierarchy":false,"main_presentation_name":true,"code_length":0,"fields":{"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_type":{"path":["ТипЗначения"],"elm":0},"type":{"types":["cat.production_params","cat.currencies","boolean","cat.nom_prices_types","cat.divisions","string","cat.nom_kinds","date","number","doc.calc_order","cat.nom","cat.furns","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date","digits":8,"fraction_figits":1}},"definition":{"synonym":"Описание","multiline_mode":true,"tooltip":"","type":{"types":["string"],"str_len":0}},"synonym":{"synonym":"Синоним","multiline_mode":false,"tooltip":"Синоним предопределенного элемента","mandatory":true,"type":{"types":["string"],"str_len":50}},"list":{"synonym":"Список","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":1,"fraction_figits":0}},"zone":{"synonym":"Область","multiline_mode":false,"tooltip":"","type":{"types":["number"],"digits":6,"fraction_figits":0}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"parent":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["cch.predefined_elmnts"],"is_ref":true}},"type":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["cat.production_params","cat.currencies","boolean","cat.nom_prices_types","cat.divisions","string","cat.nom_kinds","date","number","doc.calc_order","cat.nom","cat.furns","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date","digits":8,"fraction_figits":1}}},"tabular_sections":{"elmnts":{"name":"Элементы","synonym":"Элементы","tooltip":"","fields":{"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"","choice_type":{"path":["ТипЗначения"],"elm":0},"type":{"types":["cat.production_params","cat.currencies","boolean","cat.nom_prices_types","cat.divisions","string","cat.nom_kinds","date","number","doc.calc_order","cat.nom","cat.furns","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date","digits":8,"fraction_figits":1}},"elm":{"synonym":"Элемент","multiline_mode":false,"tooltip":"","type":{"types":["cat.production_params","cat.currencies","boolean","cat.nom_prices_types","cat.divisions","string","cat.nom_kinds","date","number","doc.calc_order","cat.nom","cat.furns","cch.properties","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date","digits":8,"fraction_figits":1}}}}},"cachable":"doc","form":{"obj":{"head":{" ":[{"id":"name","path":"o.name","synonym":"Наименование","type":"ro"},{"id":"synonym","path":"o.synonym","synonym":"Синоним","type":"ro"},"list","zone","value"]},"tabular_sections":{"elmnts":{"fields":["elm","value"],"headers":"Элемент,Значение","widths":"*,*","min_widths":"150,150","aligns":"","sortings":"na,na","types":"ref,ref"}}}}},"properties":{"name":"ДополнительныеРеквизитыИСведения","splitted":true,"synonym":"Дополнительные реквизиты и сведения","illustration":"","obj_presentation":"Дополнительный реквизит / сведение","list_presentation":"","input_by_string":["name"],"hierarchical":false,"has_owners":false,"group_hierarchy":false,"main_presentation_name":true,"code_length":0,"fields":{"shown":{"synonym":"Виден","multiline_mode":false,"tooltip":"Настройка видимости дополнительного реквизита","type":{"types":["boolean"]}},"extra_values_owner":{"synonym":"Владелец дополнительных значений","multiline_mode":false,"tooltip":"Свойство-образец, с которым у этого свойства одинаковый список дополнительных значений","choice_groups_elm":"elm","type":{"types":["cch.properties"],"is_ref":true}},"available":{"synonym":"Доступен","multiline_mode":false,"tooltip":"Настройка доступности дополнительного реквизита","type":{"types":["boolean"]}},"caption":{"synonym":"Наименование","multiline_mode":false,"tooltip":"Краткое представление свойства, которое\nвыводится в формах редактирования его значения","mandatory":true,"type":{"types":["string"],"str_len":75}},"mandatory":{"synonym":"Заполнять обязательно","multiline_mode":false,"tooltip":"Настройка проверки заполненности дополнительного реквизита","type":{"types":["boolean"]}},"note":{"synonym":"Комментарий","multiline_mode":false,"tooltip":"Поясняет назначение свойства","type":{"types":["string"],"str_len":0}},"destination":{"synonym":"Набор свойств","multiline_mode":false,"tooltip":"Набор свойств, которому принадлежит уникальное свойство. Если не задан, значит свойство общее.","choice_groups_elm":"elm","type":{"types":["cat.destinations"],"is_ref":true}},"tooltip":{"synonym":"Подсказка","multiline_mode":false,"tooltip":"Показывается пользователю при редактировании свойства в форме объекта","type":{"types":["string"],"str_len":0}},"is_extra_property":{"synonym":"Это дополнительное сведение","multiline_mode":false,"tooltip":"Свойство является дополнительным сведением, а не дополнительным реквизитом","type":{"types":["boolean"]}},"list":{"synonym":"Список","multiline_mode":false,"tooltip":"Значение представляет собой список опций","type":{"types":["boolean"]}},"predefined_name":{"synonym":"","multiline_mode":false,"tooltip":"","type":{"types":["string"],"str_len":256}},"type":{"synonym":"","multiline_mode":false,"tooltip":"Типы значения, которое можно ввести при заполнении свойства.","mandatory":true,"type":{"types":["cat.nom_groups","cat.production_params","cat.inserts","cat.price_groups","cat.currencies","enm.open_directions","cat.projects","cat.individuals","cat.users","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","cat.property_values_hierarchy","cat.property_values","boolean","cat.divisions","cat.parameters_keys","cat.partners","string","cat.organizations","date","cat.units","number","cat.work_centers","cat.work_shifts","cat.work_center_kinds","cat.cashboxes","cat.nom","cat.cnns","cat.furns","enm.vat_rates","cat.stores","cat.clrs"],"is_ref":true,"str_len":1024,"date_part":"date_time","digits":15,"fraction_figits":3}}},"tabular_sections":{"extra_fields_dependencies":{"name":"ЗависимостиДополнительныхРеквизитов","synonym":"Зависимости дополнительных реквизитов","tooltip":"","fields":{"ЗависимоеСвойство":{"synonym":"Зависимое свойство","multiline_mode":false,"tooltip":"Имя свойства дополнительного реквизита, для которого настроена зависимость.","type":{"types":["string"],"str_len":0}},"field":{"synonym":"Реквизит","multiline_mode":false,"tooltip":"Имя реквизита формы или ссылка на дополнительный реквизит, от которого зависит текущий дополнительный реквизит.","choice_groups_elm":"elm","type":{"types":["string","cch.properties"],"str_len":99,"is_ref":true}},"condition":{"synonym":"Условие","multiline_mode":false,"tooltip":"Вид зависимости. \"Равно\", \"Не равно\", \"Заполнено\" или \"Не заполнено\".","type":{"types":["string"],"str_len":20}},"value":{"synonym":"Значение","multiline_mode":false,"tooltip":"Значение реквизита в условии.","choice_groups_elm":"elm","type":{"types":["cat.ПапкиЭлектронныхПисем","enm.caching_type","doc.work_centers_performance","enm.contact_information_types","enm.individual_legal","cat.nom_groups","enm.count_calculating_ways","enm.text_aligns","cat.production_params","cat.inserts","cat.price_groups","doc.credit_card_order","cat.nom_units","doc.planning_event","cch.predefined_elmnts","cat.currencies","enm.simple_complex_all","enm.offset_options","enm.open_directions","doc.nom_prices_setup","enm.lay_split_types","cat.characteristics","cat.projects","cat.individuals","cat.users","cat.insert_bind","enm.cutting_optimization_types","enm.angle_calculating_ways","cat.partner_bank_accounts","cat.delivery_areas","cat.color_price_groups","cat.elm_visualization","doc.debit_bank_order","cat.planning_keys","enm.specification_installation_methods","doc.registers_correction","cat.property_values_hierarchy","cat.formulas","enm.planning_phases","enm.contract_kinds","cat.property_values","boolean","enm.buyers_order_states","cat.banks_qualifier","doc.credit_cash_order","doc.selling","enm.order_categories","cat.nom_prices_types","cat.organization_bank_accounts","cat.divisions","cat.destinations","enm.elm_types","enm.НазначенияЦветовыхГрупп","cat.parameters_keys","doc.purchase","enm.nom_types","cat.contact_information_kinds","cat.params_links","enm.contraction_options","cat.partners","enm.transfer_operations_options","doc.debit_cash_order","string","enm.inserts_types","enm.sz_line_types","cat.nom_kinds","enm.orientations","cat.organizations","date","cat.countries","enm.mutual_contract_settlements","enm.inset_attrs_options","cat.units","number","cat.work_centers","enm.gender","doc.work_centers_task","cat.work_shifts","enm.impost_mount_options","cat.work_center_kinds","enm.plan_limit","doc.calc_order","enm.positions","doc.credit_bank_order","cat.cashboxes","enm.open_types","enm.cnn_types","cat.nom","enm.obj_delivery_states","cat.cnns","cat.furns","enm.inserts_glass_types","cat.cash_flow_articles","enm.vat_rates","enm.cnn_sides","cat.meta_ids","cat.contracts","cat.stores","cch.properties","cat.clrs","cat.users_acl"],"is_ref":true,"str_len":50,"date_part":"date","digits":10,"fraction_figits":0}}}}},"cachable":"ram"}},"cacc":{},"bp":{},"tsk":{},"syns_1с":["arcCCW","CH","RADIUS","Автор","АвтоУравнивание","Адрес","АдресБанка","АдресДоставки","АдресЭП","Аксессуар","Активная","Арт1Стеклопакет","Арт1ТолькоВертикальный","Арт2Стеклопакет","Арт2ТолькоВертикальный","Артикул","Атрибуты","БазоваяЕдиницаИзмерения","Банк","БанкДляРасчетов","Банки","БанковскиеСчета","БанковскиеСчетаКонтрагентов","БанковскиеСчетаОрганизаций","БанковскийСчет","БизнесПроцесс","БИКБанка","БИКБанкаДляРасчетов","Булево","Валюта","ВалютаВзаиморасчетов","ВалютаДенежныхСредств","ВалютаДокумента","ВалютаЦены","Валюты","ВариантАтрибутов","ВариантПереноса","ВариантСмещения","ВариантУкорочения","ВариантыАтрибутовВставок","ВариантыКрепленияИмпостов","ВводПоСтроке","ВедениеВзаиморасчетов","ВедениеВзаиморасчетовПоДоговорам","Ведомый","ВедущаяБаза","ВедущаяЗадача","ВедущаяПродукция","ВедущаяФормула","Ведущий","ВедущийМенеджер","ВедущийЭлемент","ВерсияДанных","Вес","Вид","ВидДоговора","Виден","ВидЗатрат","ВидНоменклатуры","ВидОперации","ВидРабот","ВидРабочегоЦентра","ВидСкидкиНаценки","ВидСчета","ВидТранспортногоСредства","ВидыДоговоровКонтрагентов","ВидыЗатрат","ВидыКонтактнойИнформации","ВидыНачисленийИУдержаний","ВидыНоменклатуры","ВидыОперацийЗаказПокупателя","ВидыОперацийЗаказПоставщику","ВидыОперацийПеремещениеЗапасов","ВидыРабочихЦентров","ВидыСкидокНаценок","ВидыТранспортныхСредств","Визуализация","Владелец","ВладелецДополнительныхЗначений","Владельцы","ВнутренниеЗаказы","ВремяИзменения","ВремяНачала","ВремяОкончания","ВремяСобытия","Всего","Вставка","ВходящееИсходящееСобытие","ВыборГруппИЭлементов","Выполнена","ВыпуклаяДуга","Высота","ВысотаМакс","ВысотаМин","ВысотаРучки","ВысотаРучкиМакс","ВысотаРучкиМин","ВысотаРучкиФиксирована","Глубина","Город","ГородБанка","ГородБанкаДляРасчетов","Готовность","ГрафикиРаботников","ГрафикРаботы","ГруппыФинансовогоУчетаНоменклатуры","ДаНет","Дата","ДатаДоставки","ДатаИзменения","ДатаНачала","ДатаОкончания","ДатаРождения","ДатаСобытия","ДебетКредит","Действие","ДержатьРезервБезОплатыОграниченноеВремя","ДеятельностьПрекращена","Длина","ДлинаКода","ДлинаМакс","ДлинаМин","ДлинаНомера","ДлинаПроема","ДниНедели","ДоговорКонтрагента","ДоговорыКонтрагентов","Документ.Расчет","ДокументУдостоверяющийЛичность","Долгота","ДоменноеИмяСервера","Доп","ДополнительныеРеквизиты","ДополнительныеРеквизитыИСведения","ДополнительныеСведения","ДопускаютсяНезамкнутыеКонтуры","ДопустимаяСуммаЗадолженности","ДопустимоеЧислоДнейЗадолженности","Доступен","ЕдиницаИзмерения","ЕдиницаПоКлассификатору","ЕдиницаХраненияОстатков","ЕдиницыИзмерения","Завершен","Завершение","ЗависимостиДополнительныхРеквизитов","Заголовок","Заказ","ЗаказПокупателя","ЗаказПоставщику","Закрыт","Запасы","Заполнения","ЗаполнятьОбязательно","Запуск","Значение","ЗначениеЗаполнения","Значения","ЗначенияПолей","ЗначенияПолейАдреса","ЗначенияСвойствОбъектов","ЗначенияСвойствОбъектовИерархия","Идентификатор","ИдентификаторПользователяИБ","ИдентификаторПользователяСервиса","ИдентификаторыОбъектовМетаданных","Иерархический","ИерархияГруппИЭлементов","Изделие","ИзмененЗдесь","ИмяПредопределенныхДанных","Инд","Индекс","ИндивидуальныйПредприниматель","ИНН","ИнтеграцияКешСсылок","ИнтеграцияПраваПользователей","ИнтеграцияСостоянияТранспорта","ИнтеграцияТипВыгрузки","ИнтеграцияТипКеширования","ИнтеграцияТипСвёртки","Исполнители","Исполнитель","ИспользоватьТовары","ИтогСебестоимость","Календари","КалендариGoogle","Календарь","Камеры","Касса","Кассы","КатегорииЗаказов","Категория","КлассификаторБанковРФ","КлассификаторЕдиницИзмерения","КлиентДилера","КлючиПланирования","КлючПараметров","КМарж","КМаржВнутр","КМаржМин","Код","КодАльфа2","КодАльфа3","КодИМНС","КодПоОКПО","КодЦветаДляСтанка","Количество","КоличествоСторон","Комментарий","Конструкции","Конструкция","КонтактнаяИнформация","КонтактныеЛица","КонтактныеЛицаКонтрагентов","Контрагент","Контрагенты","КонтролироватьСуммуЗадолженности","КонтролироватьЧислоДнейЗадолженности","КонцевыеКрепления","Координата","Координаты","КоординатыЗаполнений","КорректировкаРегистров","КоррСчет","КоррСчетБанка","КоррСчетБанкаДляРасчетов","Коэффициент","КоэффициентПотерь","КПП","Кратность","КратностьВзаиморасчетов","КрепитсяШтульп","КреплениеИмпостов","КреплениеШтульпа","Курс","КурсВзаиморасчетов","КурсыВалют","ЛеваяПравая","Листовые","Маржа","Марка","Масса","МассаМакс","МассаМин","МассаСтворкиМакс","МассаСтворкиМин","МатериалОперация","Материалы","МеждународноеСокращение","Менеджер","МестоРождения","МногострочныйРежим","МожноПоворачивать","Москитка","МоскиткаЦвет","Москитки","МощностиРЦ","Мощность","Набор","НаборСвойств","НаборФурнитуры","НаборыДополнительныхРеквизитовИСведений","Наименование","НаименованиеБанка","НаименованиеПолное","НаименованиеСокращенное","НалогообложениеНДС","Направление","НаПроем","НарядРЦ","НастройкиОткрывания","Наценка","НаценкаВнешн","Недействителен","НеполноеОткрывание","НеРаботаетВремяНачала","НеРаботаетВремяОкончания","Номенклатура","Номенклатура1","Номенклатура2","НоменклатураНабор","НоменклатурнаяГруппа","Номер","НомерSW","НомерВнутр","НомерКлиента","НомерКонтура","НомерОтдела","НомерСтроки","НомерСчета","НомерТелефона","НомерТелефонаБезКодов","ОбластиДоступаGoogle","Область","Объект","ОбъектДоступа","ОбъектыДоступа","Объем","ОбязательноеЗаполнение","ОграниченияСпецификации","ОкруглятьВБольшуюСторону","ОкруглятьКоличество","Описание","ОплатаОтПокупателяПлатежнойКартой","Организации","Организация","Ориентация","ОсновнаяВалюта","ОсновнаяСтатьяДвиженияДенежныхСредств","ОсновноаяКасса","ОсновноеКонтактноеЛицо","ОсновноеПредставлениеИмя","ОсновнойБанковскийСчет","ОсновнойДоговорКонтрагента","ОсновнойМенеджерПокупателя","ОсновнойПроект","ОснЦвет","ОсьПоворота","Отбор","Ответственный","ОтражатьВБухгалтерскомУчете","ОтражатьВНалоговомУчете","Отступы","Параметр","Параметры","ПараметрыВыбора","ПараметрыИзделия","ПараметрыОтбора","ПараметрыПрописиНаРусском","ПараметрыФурнитуры","ПарныйРаскрой","Период","ПериодыСмены","пзВариантыПереносаОпераций","пзВариантыСмещений","пзВариантыУкорочений","пзВизуализацияЭлементов","пзВставки","пзВыравниваниеТекста","пзКлючиПараметров","пзМаржинальныеКоэффициентыИСкидки","пзНазначенияЦветовыхГрупп","пзНаправлениеОткрывания","пзОграничениеПлана","пзОриентация","пзПараметрыПродукции","пзПростыеСложныеВсе","пзРайоныДоставки","пзСвязиПараметров","пзСоединения","пзСпособыРасчетаКоличества","пзСпособыРасчетаУгла","пзСпособыУстановкиСпецификации","пзСторонаСоединения","пзТипыВставок","пзТипыВставокСтеклопакета","пзТипыДеленияРаскладки","пзТипыОптимизацийРаскроя","пзТипыОткрывания","пзТипыРазмерныхЛиний","пзТипыСоединений","пзТипыЭлементов","пзФурнитура","пзЦвета","Планирование","ПлатежноеПоручениеВходящее","ПлатежноеПоручениеИсходящее","ПлатежныйКалендарь","Плотность","Площадь","ПлощадьМакс","ПлощадьМин","ПлощадьППМ","Поворачивать","ПоДоговоруВЦелом","Подразделение","ПодразделениеПроизводства","Подразделения","Подсказка","Подчиненый","ПоЗаказам","ПоКонтуру","Покупатель","Пол","ПолноеИмя","Положение","ПоложениеЭлемента","Получатель","ПолФизическихЛиц","Пользователи","ПометкаУдаления","ПорогОкругления","Порядок","ПорядокОкругления","Поставщик","ПоступлениеТоваровУслуг","ПоСчетам","ПоУмолчанию","Пояснение","Предоплата","ПредопределенныеЭлементы","Предопределенный","Представление","ПредставлениеИдентификатора","ПредставлениеОбъекта","ПредставлениеСписка","Префикс","Привязки","ПривязкиВставок","Принудительно","Приоритет","Припуск","ПриходныйКассовыйОрдер","Проведен","Продукция","Проект","Проекты","Происхождение","Пропорции","Процент","ПроцентАвтоматическихСкидок","ПроцентПредоплаты","ПроцентСкидкиНаценки","ПроцентСкидкиНаценкиВнутр","Прочее","Прямоугольный","ПутьSVG","РаботаетВремяНачала","РаботаетВремяОкончания","Работники","Работы","РабочиеЦентры","РабочийЦентр","Разделитель","Размер","Размер_B","РазмерМакс","РазмерМин","РазмерныеЛинии","РазмерФальца","РазмерФурнПаза","РазныеЦвета","Район","РасходныйКассовыйОрдер","Расценка","Расчет","РасчетныйСчет","РасчетыСКонтрагентами","РасширенныйРежим","РасшифровкаПлатежа","РеализацияТоваровУслуг","Регион","Реквизит","РеквизитДопУпорядочивания","Реквизиты","Родитель","РучкаНаСтороне","СвидетельствоДатаВыдачи","СвидетельствоКодОргана","СвидетельствоНаименованиеОргана","СвидетельствоСерияНомер","СВИФТБИК","Свойство","Связи","СвязиПараметровВыбора","СвязьПоТипу","Сделка","Себестоимость","Синоним","Система","СистемыПрофилей","СистемыФурнитуры","Скидка","СкидкаВнешн","СкидкиНаценки","Склад","Склады","СКомиссионером","СКомитентом","Скрыть","Сложный","Служебный","Смена","Смены","Смещение","Событие","СобытиеПланирования","Содержание","Соедин","СоединяемыеЭлементы","Соответствие","СоответствиеЦветов","СортировкаВЛистеКомплектации","Состояние","СостояниеТранспорта","СостоянияЗаданий","СостоянияЗаказовКлиентов","Сотрудник","Сотрудники","Спецификации","Спецификация","СпецификацияЗаполнений","Список","СПокупателем","СпособРасчетаКоличества","СпособРасчетаУгла","СпособУстановкиКурса","СпособыУстановкиКурсаВалюты","СПоставщиком","СрокДействия","Ссылка","СтавкаНДС","СтавкиНДС","СтандартнаяВысотаРучки","Старт","Стартован","СтатусМатериальныхЗатрат","СтатусыЗаказов","СтатусыМатериальныхЗатратНаПроизводство","СтатьиДвиженияДенежныхСредств","СтатьиЗатрат","СтатьяДвиженияДенежныхСредств","СтатьяЗатрат","Створка","СтворкиВРазныхПлоскостях","Стоимость","Сторона","Сторона1","Сторона2","СторонаСоединения","СторонаЭлемента","Страна","СтраныМира","СтраховойНомерПФР","стрНомер","Строка","СтрокаПодключения","СтруктурнаяЕдиница","стрЭлементы","Сумма","СуммаАвтоматическойСкидки","СуммаВзаиморасчетов","СуммаВключаетНДС","СуммаВнутр","СуммаДокумента","СуммаНДС","СуммаСНаценкой","СуммаУпр","Суффикс","СчетУчета","ТаблицаРегистров","ТабличнаяЧасть","ТабличныеЧасти","ТекстКорреспондента","ТекстНазначения","ТекстоваяСтрока","Телефон","Телефоны","ТелефоныБанка","Тип","ТипВставки","ТипВставкиСтеклопакета","ТипДеления","ТипДеленияРаскладки","ТипДенежныхСредств","ТипИсходногоДокумента","ТипНоменклатуры","ТиповойБлок","ТиповыеБлоки","ТипОптимизации","ТипОткрывания","ТипСоединения","ТипСчета","ТипЦен","ТипЦенВнутр","ТипЦенПрайс","ТипЦенСебестоимость","ТипыДенежныхСредств","ТипыКонтактнойИнформации","ТипыНалогообложенияНДС","ТипыНоменклатуры","ТипыСобытий","ТипыСтрокСоставаСпецификации","ТипыСтруктурныхЕдиниц","ТипыСчетов","ТипыЦенНоменклатуры","ТипЭлемента","Товары","Толщина","ТолщинаМакс","ТолщинаМин","ТолькоДляПрямыхПрофилей","ТолькоДляЦенообразования","ТочкаМаршрута","ТранспортныеСредства","УголКГоризонту","УголКГоризонтуМакс","УголКГоризонтуМин","УголМакс","УголМин","УголРеза1","УголРеза2","УдлинениеАрки","Узел1","Узел2","Укорочение","УкорочениеПоКонтуру","Управленческий","Условие","УсловныхИзделий","Услуги","УстанавливатьСпецификацию","УстановкаЦенНоменклатуры","УточнятьРайонГеокодером","УчитыватьНДС","Фаза","ФазыПланирования","ФизическиеЛица","ФизическоеЛицо","Финиш","ФормироватьНомерПоНомеруВнутр","Формула","ФормулаВнешн","ФормулаВнутр","ФормулаПродажа","ФормулаРасчетаКурса","ФормулаУсловия","Формулы","Фурнитура","ФурнитураЦвет","ХарактерЗатрат","Характеристика","ХарактеристикаАксессуаров","ХарактеристикаНоменклатуры","ХарактеристикаПродукции","ХарактеристикиНоменклатуры","Цвет","Цвет1","Цвет2","ЦветRAL","Цвета","ЦветВРисовалке","ЦветИзнутри","ЦветоваяГруппа","ЦветоЦеновыеГруппы","ЦветСнаружи","Цена","ЦенаВключаетНДС","ЦенаВнутр","ЦеноваяГруппа","ЦеновыеГруппы","Центрировать","ЦеныНоменклатуры","Число","ЧислоДнейРезерваБезОплаты","Шаблон","Шаг","Ширина","ШиринаПилы","Широта","Шкала","Штуки","ШтульпБезимпСоед","Экземпляр","Элемент","Элемент1","Элемент2","Элементы","Эскиз","ЭтоАксессуар","ЭтоВодоотлив","ЭтоГруппа","ЭтоДополнительноеСведение","ЭтоНабор","ЭтоОсновнойЭлемент","ЭтоРаздвижка","ЭтоСоединение","ЭтоСтрокаЗаказа","ЭтоСтрокаНабора","ЭтоСтрокаОперации","ЭтоСтрокаОсновнойСпецификации","ЭтоСтрокаСочетанияНоменклатур","ЭтоТехоперация","ЭтоУслуга","ЮрЛицо","ЮрФизЛицо","Ячейка","Ячейки"],"syns_js":["arc_ccw","changed","arc_r","author","auto_align","address","bank_address","shipping_address","email_address","accessory","active","art1glass","art1vert","art2glass","art2vert","article","attributes","base_unit","bank","settlements_bank","banks","bank_accounts","partner_bank_accounts","organization_bank_accounts","bank_account","buisness_process","bank_bic","settlements_bank_bic","boolean","currency","settlements_currency","funds_currency","doc_currency","price_currency","currencies","attrs_option","transfer_option","offset_option","contraction_option","inset_attrs_options","impost_mount_options","input_by_string","mutual_settlements","mutual_contract_settlements","slave","leading_base","leading_task","leading_product","leading_formula","master","leading_manager","leading_elm","data_version","heft","kind","contract_kind","shown","cost_kind","nom_kind","transactions_kind","work_kind","work_center_kind","charges_discounts_kind","account_kind","motor_vehicle_kind","contract_kinds","costs_kinds","contact_information_kinds","charges_deductions_kinds","nom_kinds","transactions_kinds_buyers_order","transactions_kinds_purchase_order","transactions_kinds_stock_transfer","work_center_kinds","charges_discounts_kinds","motor_vehicle_kinds","visualization","owner","extra_values_owner","owners","internal_orders","change_time","begin_time","end_time","event_time","altogether","inset","inbound_outbound","choice_groups_elm","completed","arc_available","height","hmax","hmin","h_ruch","handle_height_max","handle_height_min","fix_ruch","depth","city","bank_city","settlements_bank_city","readiness","workers_schedules","worker_schedule","nom_groups","yes_no","date","shipping_date","change_date","start_date","expiration_date","birth_date","event_date","debit_credit","action","check_days_without_pay","activity_ceased","len","code_length","lmax","lmin","number_doc_len","aperture_len","week_days","contract","contracts","Документ.итРасчет","identification_document","longitude","server_domain_name","dop","extra_fields","properties","extra_properties","allow_open_cnn","allowable_debts_amount","allowable_debts_days","available","unit","qualifier_unit","storage_unit","nom_units","finished","completion","extra_fields_dependencies","caption","invoice","buyers_order","purchase_order","closed","inventories","glasses","mandatory","launch","value","fill_value","values","values_fields","address_fields","property_values","property_values_hierarchy","identifier","user_ib_uid","user_fresh_uid","meta_ids","hierarchical","group_hierarchy","product","changed_here","predefined_name","icounter","ind","individual_entrepreneur","inn","integration_links_cache","users_acl","obj_delivery_states","unload_type","caching_type","reduce_type","executors","executor","use_goods","first_cost_total","calendars","calendars_google","calendar","coffer","cashbox","cashboxes","order_categories","category","banks_qualifier","units","client_of_dealer","planning_keys","parameters_key","marginality","marginality_internal","marginality_min","id","alpha2","alpha3","imns_code","okpo","machine_tools_clr","quantity","side_count","note","constructions","cnstr","contact_information","contact_persons","contact_persons_partners","partner","partners","check_debts_amount","check_debts_days","end_mount","coordinate","coordinates","glass_coordinates","registers_correction","correspondent_account","bank_correspondent_account","settlements_bank_correspondent_account","coefficient","loss_factor","kpp","multiplicity","settlements_multiplicity","shtulp_fix_here","impost_fixation","shtulp_fixation","course","settlements_course","currency_courses","left_right","is_sandwich","margin","brand","weight","mmax","mmin","flap_weight_max","flap_weight_min","material_operation","materials","international_short","manager","birth_place","multiline_mode","can_rotate","mskt","clr_mskt","mosquito","work_centers_performance","performance","set","destination","furn_set","destinations","name","bank_name","name_full","name_short","vat","direction","on_aperture","work_centers_task","open_tunes","extra_charge","extra_charge_external","invalid","partial_opening","not_work_begin_time","not_work_end_time","nom","nom1","nom2","nom_set","nom_group","number_doc","number_cnt","number_internal","client_number","contour_number","number_division","row","account_number","phone_number","phone_without_codes","google_access_areas","area","obj","acl_obj","acl_objs","volume","mandatory_fields","specification_restrictions","rounding_in_a_big_way","rounding_quantity","definition","credit_card_order","organizations","organization","orientation","main_currency","main_cash_flow_article","main_cashbox","primary_contact","main_presentation_name","main_bank_account","main_contract","buyer_main_manager","main_project","default_clr","rotation_axis","selection","responsible","accounting_reflect","tax_accounting_reflect","offsets","param","params","choice_params","product_params","selection_params","parameters_russian_recipe","furn_params","double_cut","period","work_shift_periodes","transfer_operations_options","offset_options","contraction_options","elm_visualization","inserts","text_aligns","parameters_keys","margin_coefficients","color_groups_destination","open_directions","plan_limit","orientations","production_params","simple_complex_all","delivery_areas","params_links","cnns","count_calculating_ways","angle_calculating_ways","specification_installation_methods","cnn_sides","inserts_types","inserts_glass_types","lay_split_types","cutting_optimization_types","open_types","sz_line_types","cnn_types","elm_types","furns","clrs","planning","debit_bank_order","credit_bank_order","calendar_payments","density","s","smax","smin","coloration_area","rotate","by_entire_contract","department","department_manufactory","divisions","tooltip","has_owners","by_orders","by_contour","is_buyer","sex","full_moniker","pos","positions","recipient","gender","users","_deleted","rounding_threshold","sorting","rounding_order","is_supplier","purchase","by_invoices","by_default","illustration","prepayment","predefined_elmnts","predefined","presentation","identifier_presentation","obj_presentation","list_presentation","prefix","bindings","insert_bind","forcibly","priority","overmeasure","debit_cash_order","posted","production","project","projects","origin","proportions","rate","discount_percent_automatic","prepayment_percent","discount_percent","discount_percent_internal","others","is_rectangular","svg_path","work_begin_time","work_end_time","workers","jobs","work_centers","work_center","delimiter","sz","sizeb","sz_max","sz_min","sz_lines","sizefaltz","sizefurn","varclr","delivery_area","credit_cash_order","pricing","calc_order","current_account","invoice_payments","extended_mode","payment_details","selling","region","field","sorting_field","fields","parent","handle_side","certificate_date_issue","certificate_authority_code","certificate_authority_name","certificate_series_number","swift","property","links","choice_links","choice_type","trans","first_cost","synonym","sys","sys_profile","sys_furn","discount","discount_external","charges_discounts","warehouse","stores","with_commission_agent","with_committent","hide","difficult","ancillary","work_shift","work_shifts","offset","event","planning_event","content","cnn","cnn_elmnts","conformity","clr_conformity","complete_list_sorting","state","obj_delivery_state","task_states","buyers_order_states","employee","staff","specifications","specification","glass_specification","list","with_buyer","count_calc_method","angle_calc_method","course_installation_method","course_installation_methods","with_supplier","validity","ref","vat_rate","vat_rates","handle_height_base","start","started","costs_material_feed","invoice_conditions","costs_material_feeds","cash_flow_articles","cost_items","cash_flow_article","cost_item","flap","var_layers","cost","side","sd1","sd2","cnn_side","elm_side","country","countries","pfr_number","number_str","string","connection_str","organizational_unit","elm_str","amount","discount_amount_automatic","amount_mutual","vat_included","amount_internal","doc_amount","vat_amount","amount_marged","amount_operation","suffix","account_accounting","registers_table","tabular_section","tabular_sections","correspondent_text","appointments_text","txt_row","phone","phone_numbers","bank_phone_numbers","type","insert_type","insert_glass_type","split_type","lay_split_type","cash_flow_type","original_doc_type","nom_type","base_block","base_blocks","cutting_optimization_type","open_type","cnn_type","account_type","price_type","price_type_internal","price_type_sale","price_type_first_cost","cash_flow_types","contact_information_types","vat_types","nom_types","event_types","specification_row_types","structural_unit_types","account_types","nom_prices_types","elm_type","goods","thickness","tmax","tmin","for_direct_profile_only","for_pricing_only","buisness_process_point","transport_means","angle_hor","ahmax","ahmin","amax","amin","alp1","alp2","arc_elongation","node1","node2","contraction","contraction_by_contour","managerial","condition","condition_products","services","set_specification","nom_prices_setup","specify_area_by_geocoder","vat_consider","phase","planning_phases","individuals","individual_person","finish","number_by_number_internal","formula","external_formula","internal_formula","sale_formula","course_calc_formula","condition_formula","formulas","furn","clr_furn","costs_character","characteristic","accessory_characteristic","nom_characteristic","product_characteristic","characteristics","clr","clr1","clr2","ral","colors","clr_str","clr_in","clr_group","color_price_groups","clr_out","price","vat_price_included","price_internal","price_group","price_groups","do_center","nom_prices","number","days_without_pay","template","step","width","saw_width","latitude","scale","is_pieces","shtulp_available","specimen","elm","elm1","elm2","elmnts","outline","is_accessory","is_drainage","is_folder","is_extra_property","is_set","is_main_elm","is_sliding","is_cnn","is_order_row","is_set_row","is_procedure_row","is_main_specification_row","is_nom_combinations_row","is_procedure","is_service","legal_person","individual_legal","cell","cells"]});

(function(){
const {EnumManager,CatManager,DocManager,LogManager,DataProcessorsManager,ChartOfCharacteristicManager,ChartOfAccountManager,InfoRegManager,AccumRegManager,BusinessProcessManager,TaskManager,CatObj, DocObj, TabularSectionRow, DataProcessorObj, RegisterRow, BusinessProcessObj, TaskObj} = $p.classes
const _define = Object.defineProperties

$p.enm.accumulation_record_type = new EnumManager('enm.accumulation_record_type')
$p.enm.inset_attrs_options = new EnumManager('enm.inset_attrs_options')
$p.enm.impost_mount_options = new EnumManager('enm.impost_mount_options')
$p.enm.mutual_contract_settlements = new EnumManager('enm.mutual_contract_settlements')
$p.enm.contract_kinds = new EnumManager('enm.contract_kinds')
$p.enm.obj_delivery_states = new EnumManager('enm.obj_delivery_states')
$p.enm.caching_type = new EnumManager('enm.caching_type')
$p.enm.order_categories = new EnumManager('enm.order_categories')
$p.enm.НазначенияЦветовыхГрупп = new EnumManager('enm.НазначенияЦветовыхГрупп')
$p.enm.transfer_operations_options = new EnumManager('enm.transfer_operations_options')
$p.enm.offset_options = new EnumManager('enm.offset_options')
$p.enm.contraction_options = new EnumManager('enm.contraction_options')
$p.enm.text_aligns = new EnumManager('enm.text_aligns')
$p.enm.open_directions = new EnumManager('enm.open_directions')
$p.enm.plan_limit = new EnumManager('enm.plan_limit')
$p.enm.orientations = new EnumManager('enm.orientations')
$p.enm.simple_complex_all = new EnumManager('enm.simple_complex_all')
$p.enm.count_calculating_ways = new EnumManager('enm.count_calculating_ways')
$p.enm.angle_calculating_ways = new EnumManager('enm.angle_calculating_ways')
$p.enm.specification_installation_methods = new EnumManager('enm.specification_installation_methods')
$p.enm.cnn_sides = new EnumManager('enm.cnn_sides')
$p.enm.inserts_types = new EnumManager('enm.inserts_types')
$p.enm.inserts_glass_types = new EnumManager('enm.inserts_glass_types')
$p.enm.lay_split_types = new EnumManager('enm.lay_split_types')
$p.enm.cutting_optimization_types = new EnumManager('enm.cutting_optimization_types')
$p.enm.open_types = new EnumManager('enm.open_types')
$p.enm.sz_line_types = new EnumManager('enm.sz_line_types')
$p.enm.cnn_types = new EnumManager('enm.cnn_types')
$p.enm.elm_types = new EnumManager('enm.elm_types')
$p.enm.positions = new EnumManager('enm.positions')
$p.enm.gender = new EnumManager('enm.gender')
$p.enm.buyers_order_states = new EnumManager('enm.buyers_order_states')
$p.enm.vat_rates = new EnumManager('enm.vat_rates')
$p.enm.contact_information_types = new EnumManager('enm.contact_information_types')
$p.enm.nom_types = new EnumManager('enm.nom_types')
$p.enm.planning_phases = new EnumManager('enm.planning_phases')
$p.enm.individual_legal = new EnumManager('enm.individual_legal')

/**
* ### План видов характеристик ПредопределенныеЭлементы
* Хранит значения настроек и параметров подсистем
* @class CchPredefined_elmnts
* @extends CatObj
* @constructor 
*/
$p.CchPredefined_elmnts = class CchPredefined_elmnts extends CatObj{}
_define($p.CchPredefined_elmnts.prototype, {value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
definition: {get: function(){return this._getter('definition')}, set: function(v){this._setter('definition',v)}, enumerable: true, configurable: true},
synonym: {get: function(){return this._getter('synonym')}, set: function(v){this._setter('synonym',v)}, enumerable: true, configurable: true},
list: {get: function(){return this._getter('list')}, set: function(v){this._setter('list',v)}, enumerable: true, configurable: true},
zone: {get: function(){return this._getter('zone')}, set: function(v){this._setter('zone',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true},
type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true}});
$p.CchPredefined_elmntsElmntsRow = class CchPredefined_elmntsElmntsRow extends TabularSectionRow{}
_define($p.CchPredefined_elmntsElmntsRow.prototype, {value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true}});
_define($p.CchPredefined_elmnts.prototype, { 'elmnts': {get: function(){return this._getter_ts('elmnts')}, set: function(v){this._setter_ts('elmnts',v)}, enumerable: true, configurable: true}})
$p.cch.predefined_elmnts = new ChartOfCharacteristicManager('cch.predefined_elmnts')

/**
* ### План видов характеристик ДополнительныеРеквизитыИСведения
* Дополнительные реквизиты и сведения
* @class CchProperties
* @extends CatObj
* @constructor 
*/
$p.CchProperties = class CchProperties extends CatObj{}
_define($p.CchProperties.prototype, {shown: {get: function(){return this._getter('shown')}, set: function(v){this._setter('shown',v)}, enumerable: true, configurable: true},
extra_values_owner: {get: function(){return this._getter('extra_values_owner')}, set: function(v){this._setter('extra_values_owner',v)}, enumerable: true, configurable: true},
available: {get: function(){return this._getter('available')}, set: function(v){this._setter('available',v)}, enumerable: true, configurable: true},
caption: {get: function(){return this._getter('caption')}, set: function(v){this._setter('caption',v)}, enumerable: true, configurable: true},
mandatory: {get: function(){return this._getter('mandatory')}, set: function(v){this._setter('mandatory',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
destination: {get: function(){return this._getter('destination')}, set: function(v){this._setter('destination',v)}, enumerable: true, configurable: true},
tooltip: {get: function(){return this._getter('tooltip')}, set: function(v){this._setter('tooltip',v)}, enumerable: true, configurable: true},
is_extra_property: {get: function(){return this._getter('is_extra_property')}, set: function(v){this._setter('is_extra_property',v)}, enumerable: true, configurable: true},
list: {get: function(){return this._getter('list')}, set: function(v){this._setter('list',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true}});
$p.CchPropertiesExtra_fields_dependenciesRow = class CchPropertiesExtra_fields_dependenciesRow extends TabularSectionRow{}
_define($p.CchPropertiesExtra_fields_dependenciesRow.prototype, {ЗависимоеСвойство: {get: function(){return this._getter('ЗависимоеСвойство')}, set: function(v){this._setter('ЗависимоеСвойство',v)}, enumerable: true, configurable: true},
field: {get: function(){return this._getter('field')}, set: function(v){this._setter('field',v)}, enumerable: true, configurable: true},
condition: {get: function(){return this._getter('condition')}, set: function(v){this._setter('condition',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true}});
_define($p.CchProperties.prototype, { 'extra_fields_dependencies': {get: function(){return this._getter_ts('extra_fields_dependencies')}, set: function(v){this._setter_ts('extra_fields_dependencies',v)}, enumerable: true, configurable: true}})
$p.cch.properties = new ChartOfCharacteristicManager('cch.properties')

/**
* ### Справочник Пользователи
* Пользователи
* @class CatUsers
* @extends CatObj
* @constructor 
*/
$p.CatUsers = class CatUsers extends CatObj{}
_define($p.CatUsers.prototype, {invalid: {get: function(){return this._getter('invalid')}, set: function(v){this._setter('invalid',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
individual_person: {get: function(){return this._getter('individual_person')}, set: function(v){this._setter('individual_person',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
ancillary: {get: function(){return this._getter('ancillary')}, set: function(v){this._setter('ancillary',v)}, enumerable: true, configurable: true},
user_ib_uid: {get: function(){return this._getter('user_ib_uid')}, set: function(v){this._setter('user_ib_uid',v)}, enumerable: true, configurable: true},
user_fresh_uid: {get: function(){return this._getter('user_fresh_uid')}, set: function(v){this._setter('user_fresh_uid',v)}, enumerable: true, configurable: true},
id: {get: function(){return this._getter('id')}, set: function(v){this._setter('id',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.CatUsersExtra_fieldsRow = class CatUsersExtra_fieldsRow extends TabularSectionRow{}
_define($p.CatUsersExtra_fieldsRow.prototype, {property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
_define($p.CatUsers.prototype, { 'extra_fields': {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true}})
$p.CatUsersContact_informationRow = class CatUsersContact_informationRow extends TabularSectionRow{}
_define($p.CatUsersContact_informationRow.prototype, {property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true},
type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true},
kind: {get: function(){return this._getter('kind')}, set: function(v){this._setter('kind',v)}, enumerable: true, configurable: true},
presentation: {get: function(){return this._getter('presentation')}, set: function(v){this._setter('presentation',v)}, enumerable: true, configurable: true},
values_fields: {get: function(){return this._getter('values_fields')}, set: function(v){this._setter('values_fields',v)}, enumerable: true, configurable: true},
country: {get: function(){return this._getter('country')}, set: function(v){this._setter('country',v)}, enumerable: true, configurable: true},
region: {get: function(){return this._getter('region')}, set: function(v){this._setter('region',v)}, enumerable: true, configurable: true},
city: {get: function(){return this._getter('city')}, set: function(v){this._setter('city',v)}, enumerable: true, configurable: true},
email_address: {get: function(){return this._getter('email_address')}, set: function(v){this._setter('email_address',v)}, enumerable: true, configurable: true},
server_domain_name: {get: function(){return this._getter('server_domain_name')}, set: function(v){this._setter('server_domain_name',v)}, enumerable: true, configurable: true},
phone_number: {get: function(){return this._getter('phone_number')}, set: function(v){this._setter('phone_number',v)}, enumerable: true, configurable: true},
phone_without_codes: {get: function(){return this._getter('phone_without_codes')}, set: function(v){this._setter('phone_without_codes',v)}, enumerable: true, configurable: true},
ВидДляСписка: {get: function(){return this._getter('ВидДляСписка')}, set: function(v){this._setter('ВидДляСписка',v)}, enumerable: true, configurable: true}});
_define($p.CatUsers.prototype, { 'contact_information': {get: function(){return this._getter_ts('contact_information')}, set: function(v){this._setter_ts('contact_information',v)}, enumerable: true, configurable: true}})
$p.cat.users = new CatManager('cat.users')

/**
* ### Справочник ИнтеграцияПраваПользователей
* Права внешних пользователей
* @class CatUsers_acl
* @extends CatObj
* @constructor 
*/
$p.CatUsers_acl = class CatUsers_acl extends CatObj{}
_define($p.CatUsers_acl.prototype, {prefix: {get: function(){return this._getter('prefix')}, set: function(v){this._setter('prefix',v)}, enumerable: true, configurable: true},
СуффиксБазы: {get: function(){return this._getter('СуффиксБазы')}, set: function(v){this._setter('СуффиксБазы',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
owner: {get: function(){return this._getter('owner')}, set: function(v){this._setter('owner',v)}, enumerable: true, configurable: true}});
$p.CatUsers_aclAcl_objsRow = class CatUsers_aclAcl_objsRow extends TabularSectionRow{}
_define($p.CatUsers_aclAcl_objsRow.prototype, {acl_obj: {get: function(){return this._getter('acl_obj')}, set: function(v){this._setter('acl_obj',v)}, enumerable: true, configurable: true},
type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true},
by_default: {get: function(){return this._getter('by_default')}, set: function(v){this._setter('by_default',v)}, enumerable: true, configurable: true}});
_define($p.CatUsers_acl.prototype, { 'acl_objs': {get: function(){return this._getter_ts('acl_objs')}, set: function(v){this._setter_ts('acl_objs',v)}, enumerable: true, configurable: true}})
$p.cat.users_acl = new CatManager('cat.users_acl')

/**
* ### Справочник Склады
* Сведения о местах хранения товаров (складах), их структуре и физических лицах, назначенных материально ответственными (МОЛ) за тот или иной склад
* @class CatStores
* @extends CatObj
* @constructor 
*/
$p.CatStores = class CatStores extends CatObj{}
_define($p.CatStores.prototype, {note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.CatStoresExtra_fieldsRow = class CatStoresExtra_fieldsRow extends TabularSectionRow{}
_define($p.CatStoresExtra_fieldsRow.prototype, {property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
_define($p.CatStores.prototype, { 'extra_fields': {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true}})
$p.cat.stores = new CatManager('cat.stores')

/**
* ### Справочник Подразделения
* Перечень подразделений предприятия
* @class CatDivisions
* @extends CatObj
* @constructor 
*/
$p.CatDivisions = class CatDivisions extends CatObj{}
_define($p.CatDivisions.prototype, {main_project: {get: function(){return this._getter('main_project')}, set: function(v){this._setter('main_project',v)}, enumerable: true, configurable: true},
sorting: {get: function(){return this._getter('sorting')}, set: function(v){this._setter('sorting',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.CatDivisionsExtra_fieldsRow = class CatDivisionsExtra_fieldsRow extends TabularSectionRow{}
_define($p.CatDivisionsExtra_fieldsRow.prototype, {property: {get: function(){return this._getter('property')}, set: function(v){this._setter('property',v)}, enumerable: true, configurable: true},
value: {get: function(){return this._getter('value')}, set: function(v){this._setter('value',v)}, enumerable: true, configurable: true},
txt_row: {get: function(){return this._getter('txt_row')}, set: function(v){this._setter('txt_row',v)}, enumerable: true, configurable: true}});
_define($p.CatDivisions.prototype, { 'extra_fields': {get: function(){return this._getter_ts('extra_fields')}, set: function(v){this._setter_ts('extra_fields',v)}, enumerable: true, configurable: true}})
$p.cat.divisions = new CatManager('cat.divisions')

/**
* ### Справочник ФизическиеЛица
* Физические лица
* @class CatIndividuals
* @extends CatObj
* @constructor 
*/
$p.CatIndividuals = class CatIndividuals extends CatObj{}
_define($p.CatIndividuals.prototype, {birth_date: {get: function(){return this._getter('birth_date')}, set: function(v){this._setter('birth_date',v)}, enumerable: true, configurable: true},
inn: {get: function(){return this._getter('inn')}, set: function(v){this._setter('inn',v)}, enumerable: true, configurable: true},
imns_code: {get: function(){return this._getter('imns_code')}, set: function(v){this._setter('imns_code',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
pfr_number: {get: function(){return this._getter('pfr_number')}, set: function(v){this._setter('pfr_number',v)}, enumerable: true, configurable: true},
sex: {get: function(){return this._getter('sex')}, set: function(v){this._setter('sex',v)}, enumerable: true, configurable: true},
birth_place: {get: function(){return this._getter('birth_place')}, set: function(v){this._setter('birth_place',v)}, enumerable: true, configurable: true},
ОсновноеИзображение: {get: function(){return this._getter('ОсновноеИзображение')}, set: function(v){this._setter('ОсновноеИзображение',v)}, enumerable: true, configurable: true},
Фамилия: {get: function(){return this._getter('Фамилия')}, set: function(v){this._setter('Фамилия',v)}, enumerable: true, configurable: true},
Имя: {get: function(){return this._getter('Имя')}, set: function(v){this._setter('Имя',v)}, enumerable: true, configurable: true},
Отчество: {get: function(){return this._getter('Отчество')}, set: function(v){this._setter('Отчество',v)}, enumerable: true, configurable: true},
ФамилияРП: {get: function(){return this._getter('ФамилияРП')}, set: function(v){this._setter('ФамилияРП',v)}, enumerable: true, configurable: true},
ИмяРП: {get: function(){return this._getter('ИмяРП')}, set: function(v){this._setter('ИмяРП',v)}, enumerable: true, configurable: true},
ОтчествоРП: {get: function(){return this._getter('ОтчествоРП')}, set: function(v){this._setter('ОтчествоРП',v)}, enumerable: true, configurable: true},
ОснованиеРП: {get: function(){return this._getter('ОснованиеРП')}, set: function(v){this._setter('ОснованиеРП',v)}, enumerable: true, configurable: true},
ДолжностьРП: {get: function(){return this._getter('ДолжностьРП')}, set: function(v){this._setter('ДолжностьРП',v)}, enumerable: true, configurable: true},
Должность: {get: function(){return this._getter('Должность')}, set: function(v){this._setter('Должность',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.CatIndividualsContact_informationRow = class CatIndividualsContact_informationRow extends TabularSectionRow{}
_define($p.CatIndividualsContact_informationRow.prototype, {type: {get: function(){return this._getter('type')}, set: function(v){this._setter('type',v)}, enumerable: true, configurable: true},
kind: {get: function(){return this._getter('kind')}, set: function(v){this._setter('kind',v)}, enumerable: true, configurable: true},
presentation: {get: function(){return this._getter('presentation')}, set: function(v){this._setter('presentation',v)}, enumerable: true, configurable: true},
values_fields: {get: function(){return this._getter('values_fields')}, set: function(v){this._setter('values_fields',v)}, enumerable: true, configurable: true},
country: {get: function(){return this._getter('country')}, set: function(v){this._setter('country',v)}, enumerable: true, configurable: true},
region: {get: function(){return this._getter('region')}, set: function(v){this._setter('region',v)}, enumerable: true, configurable: true},
city: {get: function(){return this._getter('city')}, set: function(v){this._setter('city',v)}, enumerable: true, configurable: true},
email_address: {get: function(){return this._getter('email_address')}, set: function(v){this._setter('email_address',v)}, enumerable: true, configurable: true},
server_domain_name: {get: function(){return this._getter('server_domain_name')}, set: function(v){this._setter('server_domain_name',v)}, enumerable: true, configurable: true},
phone_number: {get: function(){return this._getter('phone_number')}, set: function(v){this._setter('phone_number',v)}, enumerable: true, configurable: true},
phone_without_codes: {get: function(){return this._getter('phone_without_codes')}, set: function(v){this._setter('phone_without_codes',v)}, enumerable: true, configurable: true},
ВидДляСписка: {get: function(){return this._getter('ВидДляСписка')}, set: function(v){this._setter('ВидДляСписка',v)}, enumerable: true, configurable: true}});
_define($p.CatIndividuals.prototype, { 'contact_information': {get: function(){return this._getter_ts('contact_information')}, set: function(v){this._setter_ts('contact_information',v)}, enumerable: true, configurable: true}})
$p.cat.individuals = new CatManager('cat.individuals')

/**
* ### Справочник КлючиПланирования
* Смена + Подразделение + Участок
* @class CatPlanning_keys
* @extends CatObj
* @constructor 
*/
$p.CatPlanning_keys = class CatPlanning_keys extends CatObj{}
_define($p.CatPlanning_keys.prototype, {work_shift: {get: function(){return this._getter('work_shift')}, set: function(v){this._setter('work_shift',v)}, enumerable: true, configurable: true},
department: {get: function(){return this._getter('department')}, set: function(v){this._setter('department',v)}, enumerable: true, configurable: true},
work_center: {get: function(){return this._getter('work_center')}, set: function(v){this._setter('work_center',v)}, enumerable: true, configurable: true},
work_center_kind: {get: function(){return this._getter('work_center_kind')}, set: function(v){this._setter('work_center_kind',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.cat.planning_keys = new CatManager('cat.planning_keys')

/**
* ### Справочник Смены
* Перечень рабочих смен предприятия
* @class CatWork_shifts
* @extends CatObj
* @constructor 
*/
$p.CatWork_shifts = class CatWork_shifts extends CatObj{}
_define($p.CatWork_shifts.prototype, {predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true}});
$p.CatWork_shiftsWork_shift_periodesRow = class CatWork_shiftsWork_shift_periodesRow extends TabularSectionRow{}
_define($p.CatWork_shiftsWork_shift_periodesRow.prototype, {begin_time: {get: function(){return this._getter('begin_time')}, set: function(v){this._setter('begin_time',v)}, enumerable: true, configurable: true},
end_time: {get: function(){return this._getter('end_time')}, set: function(v){this._setter('end_time',v)}, enumerable: true, configurable: true}});
_define($p.CatWork_shifts.prototype, { 'work_shift_periodes': {get: function(){return this._getter_ts('work_shift_periodes')}, set: function(v){this._setter_ts('work_shift_periodes',v)}, enumerable: true, configurable: true}})
$p.cat.work_shifts = new CatManager('cat.work_shifts')

/**
* ### Справочник ВидыРабочихЦентров
* Виды рабочих центров
* @class CatWork_center_kinds
* @extends CatObj
* @constructor 
*/
$p.CatWork_center_kinds = class CatWork_center_kinds extends CatObj{}
_define($p.CatWork_center_kinds.prototype, {predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.work_center_kinds = new CatManager('cat.work_center_kinds')

/**
* ### Справочник РабочиеЦентры
* Рабочие центры
* @class CatWork_centers
* @extends CatObj
* @constructor 
*/
$p.CatWork_centers = class CatWork_centers extends CatObj{}
_define($p.CatWork_centers.prototype, {work_center_kind: {get: function(){return this._getter('work_center_kind')}, set: function(v){this._setter('work_center_kind',v)}, enumerable: true, configurable: true},
КоэффициентВремениРаботы: {get: function(){return this._getter('КоэффициентВремениРаботы')}, set: function(v){this._setter('КоэффициентВремениРаботы',v)}, enumerable: true, configurable: true},
МаксимальнаяЗагрузка: {get: function(){return this._getter('МаксимальнаяЗагрузка')}, set: function(v){this._setter('МаксимальнаяЗагрузка',v)}, enumerable: true, configurable: true},
calendar: {get: function(){return this._getter('calendar')}, set: function(v){this._setter('calendar',v)}, enumerable: true, configurable: true},
definition: {get: function(){return this._getter('definition')}, set: function(v){this._setter('definition',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.work_centers = new CatManager('cat.work_centers')

/**
* ### Справочник ЗначенияСвойствОбъектов
* Дополнительные значения
* @class CatProperty_values
* @extends CatObj
* @constructor 
*/
$p.CatProperty_values = class CatProperty_values extends CatObj{}
_define($p.CatProperty_values.prototype, {heft: {get: function(){return this._getter('heft')}, set: function(v){this._setter('heft',v)}, enumerable: true, configurable: true},
ПолноеНаименование: {get: function(){return this._getter('ПолноеНаименование')}, set: function(v){this._setter('ПолноеНаименование',v)}, enumerable: true, configurable: true},
predefined_name: {get: function(){return this._getter('predefined_name')}, set: function(v){this._setter('predefined_name',v)}, enumerable: true, configurable: true},
owner: {get: function(){return this._getter('owner')}, set: function(v){this._setter('owner',v)}, enumerable: true, configurable: true},
parent: {get: function(){return this._getter('parent')}, set: function(v){this._setter('parent',v)}, enumerable: true, configurable: true}});
$p.cat.property_values = new CatManager('cat.property_values')

/**
* ### Документ СобытиеПланирования
* Событие планирования
* @class DocPlanning_event
* @extends DocObj
* @constructor 
*/
$p.DocPlanning_event = class DocPlanning_event extends DocObj{}
_define($p.DocPlanning_event.prototype, {phase: {get: function(){return this._getter('phase')}, set: function(v){this._setter('phase',v)}, enumerable: true, configurable: true},
work_center: {get: function(){return this._getter('work_center')}, set: function(v){this._setter('work_center',v)}, enumerable: true, configurable: true},
recipient: {get: function(){return this._getter('recipient')}, set: function(v){this._setter('recipient',v)}, enumerable: true, configurable: true},
calc_order: {get: function(){return this._getter('calc_order')}, set: function(v){this._setter('calc_order',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true}});
$p.DocPlanning_eventExecutorsRow = class DocPlanning_eventExecutorsRow extends TabularSectionRow{}
_define($p.DocPlanning_eventExecutorsRow.prototype, {executor: {get: function(){return this._getter('executor')}, set: function(v){this._setter('executor',v)}, enumerable: true, configurable: true}});
_define($p.DocPlanning_event.prototype, { 'executors': {get: function(){return this._getter_ts('executors')}, set: function(v){this._setter_ts('executors',v)}, enumerable: true, configurable: true}})
$p.DocPlanning_eventPlanningRow = class DocPlanning_eventPlanningRow extends TabularSectionRow{}
_define($p.DocPlanning_eventPlanningRow.prototype, {executor: {get: function(){return this._getter('executor')}, set: function(v){this._setter('executor',v)}, enumerable: true, configurable: true},
obj: {get: function(){return this._getter('obj')}, set: function(v){this._setter('obj',v)}, enumerable: true, configurable: true},
specimen: {get: function(){return this._getter('specimen')}, set: function(v){this._setter('specimen',v)}, enumerable: true, configurable: true},
elm: {get: function(){return this._getter('elm')}, set: function(v){this._setter('elm',v)}, enumerable: true, configurable: true},
performance: {get: function(){return this._getter('performance')}, set: function(v){this._setter('performance',v)}, enumerable: true, configurable: true},
event_time: {get: function(){return this._getter('event_time')}, set: function(v){this._setter('event_time',v)}, enumerable: true, configurable: true}});
_define($p.DocPlanning_event.prototype, { 'planning': {get: function(){return this._getter_ts('planning')}, set: function(v){this._setter_ts('planning',v)}, enumerable: true, configurable: true}})
$p.doc.planning_event = new DocManager('doc.planning_event')

/**
* ### Регистр сведений $log
* Журнал событий
* @class Ireg$log
* @extends RegisterRow
* @constructor 
*/
$p.Ireg$log = class Ireg$log extends RegisterRow{}
_define($p.Ireg$log.prototype, {date: {get: function(){return this._getter('date')}, set: function(v){this._setter('date',v)}, enumerable: true, configurable: true},
sequence: {get: function(){return this._getter('sequence')}, set: function(v){this._setter('sequence',v)}, enumerable: true, configurable: true},
class: {get: function(){return this._getter('class')}, set: function(v){this._setter('class',v)}, enumerable: true, configurable: true},
note: {get: function(){return this._getter('note')}, set: function(v){this._setter('note',v)}, enumerable: true, configurable: true},
obj: {get: function(){return this._getter('obj')}, set: function(v){this._setter('obj',v)}, enumerable: true, configurable: true}});
$p.ireg.$log = new LogManager('ireg.$log')
})()

}